#!/bin/sh
set -e
program="${0%/*}/form"

total=0; nos=0
no() { total=$((total+1)); echo "no ok $total - $1"; nos=$((nos+1)); }
ok() { total=$((total+1)); echo "ok $total - $1"; }
is_file() { if test -f "$1"; then ok "$2"; else on "$2"; fi; }
no_file() { if test -f "$1"; then no "$2"; else ok "$2"; fi; }
eq() { if test "$1" = "$2"; then ok "$3"; else no "$3"
	printf '\033[32m%s\n\033[31m%s\n\033[m' "$1" "$2"; fi; }
desc() { printf '#\n\033[1m%s\033[m\n' "$1"; }

##########################################################################


MAIL_TO='to@example.com'
MAIL_SUBJECT='Feedback'
MAIL_HTML='yes'

FIELDS='
name,1, 2, Name
email, 7,255, Email address
comment, 1, 500,Your comment
'

ERR_FORMAT='%s should be from %s to %s chars'
ERR_INVALID='Oops! Try again.'
ERR_EXPIRED='Form expired. Try again.'
EXP_TIME='3600'

temp=$(mktemp -d)

DB="$temp/db"
TEMPLATE="$temp/feedback.html"
SUCCESS_URL='/thanks.html'

mkdir "$DB"

# shellcheck disable=SC2016
> "$TEMPLATE" echo '<input name="name" value="$name">
<input name="email" value="$email">
<textarea name="comment">$comment</textarea>
<input name="token" value="$token">
$err'

export MAIL_TO MAIL_SUBJECT MAIL_HTML
export FIELDS ERR_FORMAT ERR_INVALID ERR_EXPIRED
export EXP_TIME DB TEMPLATE SUCCESS_URL


desc 'basic'

out=$("$program")
model='Status: 301 Moved Permanently
Location: ?&err=invalid'
eq "$out" "$model" 'REQUEST_METHOD='


desc 'GET'
export REQUEST_METHOD='GET'


out=$("$program")
token=$(cd "$temp/db/tokens/" && ls)
model='Status: 200 OK
Content-Type: text/html

<input name="name" value="">
<input name="email" value="">
<textarea name="comment"></textarea>
<input name="token" value="'"$token"'">'
eq "$out" "$model" 'no QUERY_STRING'


export QUERY_STRING='name=a&email=a@aa.aa&comment=aa'
rm "${temp:?}/db/tokens/"*
out=$("$program")

token=$(cd "$temp/db/tokens/" && ls)
is_file "$temp/db/tokens/$token" 'token created'

model='Status: 200 OK
Content-Type: text/html

<input name="name" value="a">
<input name="email" value="a@aa.aa">
<textarea name="comment">aa</textarea>
<input name="token" value="'"$token"'">'
eq "$out" "$model" 'with QUERY_STRING'

export QUERY_STRING='name=&email=a@aa.aa&comment=aa&err=name'
rm "${temp:?}/db/tokens/"*
out=$("$program")
token=$(cd "$temp/db/tokens/" && ls)
model='Status: 200 OK
Content-Type: text/html

<input name="name" value="">
<input name="email" value="a@aa.aa">
<textarea name="comment">aa</textarea>
<input name="token" value="'"$token"'">
Name should be from 1 to 2 chars'
eq "$out" "$model" 'with err=name'

export QUERY_STRING='name=a&email=a@aa.aa&comment=aa&err=invalid'
rm "${temp:?}/db/tokens/"*
out=$("$program")
token=$(cd "$temp/db/tokens/" && ls)
model='Status: 200 OK
Content-Type: text/html

<input name="name" value="a">
<input name="email" value="a@aa.aa">
<textarea name="comment">aa</textarea>
<input name="token" value="'"$token"'">
Oops! Try again.'
eq "$out" "$model" 'with err=invalid'


desc 'POST'
export REQUEST_METHOD='POST'

query=''
export CONTENT_LENGTH=${#query}
out=$(printf '%s' "$query" | "$program")
model='Status: 301 Moved Permanently
Location: ?&err=name'
eq "$out" "$model" 'fail on no name'

query='name=aaa'
export CONTENT_LENGTH=${#query}
out=$(printf '%s' "$query" | "$program")
model='Status: 301 Moved Permanently
Location: ?name=aaa&err=name'
eq "$out" "$model" 'fail on long name'

export EXP_TIME='0'
query="name=a&email=a@aa.aa&comment=a&token=$token"
export CONTENT_LENGTH=${#query}
out=$(printf '%s' "$query" | "$program")
model='Status: 301 Moved Permanently
Location: ?name=a&email=a@aa.aa&comment=a&err=expired'
eq "$out" "$model" 'fail on expired token'

no_file "$temp/db/tokens/$token" 'expired token removed'

export REMOTE_ADDR='127.0.0.1'
export SERVER_NAME='www'

export EXP_TIME='3600'
export REQUEST_METHOD='GET'
"$program" > /dev/null
export REQUEST_METHOD='POST'
token=$(cd "$temp/db/tokens/" && ls)
query="name=a&email=a@aa.aa&comment=a&token=$token"
export CONTENT_LENGTH=${#query}
out=$(printf '%s' "$query" | "$program")
model='Status: 301 Moved Permanently
Location: /thanks.html'
eq "$out" "$model" 'valid post'

no_file "$temp/db/tokens/$token" 'valid token removed'

query="name=a&email=a@aa.aa&comment=a&token=$token"
export CONTENT_LENGTH=${#query}
out=$(printf '%s' "$query" | "$program")
model='Status: 301 Moved Permanently
Location: ?name=a&email=a@aa.aa&comment=a&err=invalid'
eq "$out" "$model" 'fail on token reuse'

desc 'messages'

model='To: to@example.com
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="XXXX"
Subject: =?utf-8?B?RmVlZGJhY2sK?=

--XXXX
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit

Name: a
Email address: a@aa.aa
Your comment: a

---

www 127.0.0.1 XXXX

--XXXX
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 7bit

<pre>
Name: a
Email address: a@aa.aa
Your comment: a
</pre>
<hr>
<p style="font-size: small;">
www 127.0.0.1 XXXX
</p>

--XXXX--'
post="$(sed '
s/boundary=".*/boundary="XXXX"/
s/--[a-z]\{20,20\}/--XXXX/
s/^www .*/www 127.0.0.1 XXXX/
' "$temp/db/mail/"*)"

eq "$post" "$model" 'html'

model='To: to@example.com
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
Subject: =?utf-8?B?RmVlZGJhY2sK?=

Name: a
Email address: a@aa.aa
Your comment: a

---

www 127.0.0.1 XXXX'

export REQUEST_METHOD='GET'
"$program" > /dev/null
rm "${temp:?}/db/mail/"*
export REQUEST_METHOD='POST'
token=$(cd "$temp/db/tokens/" && ls)
query="name=a&email=a@aa.aa&comment=a&token=$token"
export CONTENT_LENGTH=${#query}
export MAIL_HTML='no'
out=$(printf '%s' "$query" | "$program")
post="$(sed '
s/--[a-z]\{20,20\}/--XXXX/
s/^www .*/www 127.0.0.1 XXXX/
' "$temp/db/mail/"*)"
eq "$post" "$model" 'plain'

rm -rf "${temp:?}"


##########################################################################

echo "1..$total"
if [ "$nos" -gt 0 ]; then echo "FAILED $nos/$total"; else echo "PASS"; fi
