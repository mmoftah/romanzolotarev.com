#!/bin/sh

main() {
	test -n "$PADDLE_AUTH_CODE" || fail 'no PADDLE_AUTH_CODE'
	test -n "$PADDLE_ID" || fail 'no PADDLE_ID'

	init
	test_GET
	finalize
}

##############################################################################

test_GET() {
	desc GET

	TEMP=$(mktemp -d)

	http200='Status: 200'
	http500='Status: 500'
	http404='Status: 404'

	export ROOT="/var/www"
	export DB="$TEMP/db"
	export PAGES="$TEMP/mtw"

	mkdir -p "$DB"
	mkdir -p "$PAGES"
	mkdir -p "$DB/paypal"

########

	export REQUEST_METHOD=GET
	export REQUEST_URI='/mtw/?setup'
	out=$("$P")
	has "$http500" "$out" "$REQUEST_URI 500"

########

	echo "$PAYPAL_SECRET" > "$DB/paypal/secret"
	echo "$PAYPAL_CLIENT_ID" > "$DB/paypal/client_id"
	touch "$PAGES/_header.html"
	touch "$PAGES/_footer.html"
	out=$("$P")
	has "$http200" "$out" "$REQUEST_URI 200"

########

	export REQUEST_METHOD=GET
	export REQUEST_URI='/mtw/'
	out=$("$P")
	has "$http404" "$out" "$REQUEST_URI 404"

########

	echo 'index' > "$PAGES/index.html"
	out=$("$P")
	has "$http200" "$out" "$REQUEST_URI 200"

########

	rm -rf "${TEMP:?}"
}

##############################################################################

init() { T=0; NOS=0; P="${0%/*}/m"; }
finalize() { echo "1..$T"; if test "$NOS" -gt 0
	then echo "FAILED $NOS/$T"; else echo "PASS"; fi }
fail() { >&2 echo "$1"; exit 1; }
no() { T=$((T+1)); echo "no ok $T - $1"; NOS=$((NOS+1)); }
ok() { T=$((T+1)); echo "ok $T - $1"; }
has() { if echo "$1" | grep -q "$2"; then ok "$3"; else no "$3"
	printf '\033[31m%s\n\033[m' "$1"; fi }
eq() { if test "$1" = "$2"; then ok "$3"; else no "$3"
	printf '\033[32m%s\n\033[31m%s\n\033[m' "$1" "$2"; fi }
desc() { printf '#\n\033[1m%s\033[m\n' "$1"; }
main "$@"
